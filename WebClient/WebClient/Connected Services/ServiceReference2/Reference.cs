//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebClient.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicineContract", Namespace="http://schemas.datacontract.org/2004/07/MedicalStoreWCFService")]
    [System.SerializableAttribute()]
    public partial class MedicineContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedicineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int stockField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedicineID {
            get {
                return this.MedicineIDField;
            }
            set {
                if ((this.MedicineIDField.Equals(value) != true)) {
                    this.MedicineIDField = value;
                    this.RaisePropertyChanged("MedicineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int stock {
            get {
                return this.stockField;
            }
            set {
                if ((this.stockField.Equals(value) != true)) {
                    this.stockField = value;
                    this.RaisePropertyChanged("stock");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PurchaseContract", Namespace="http://schemas.datacontract.org/2004/07/MedicalStoreWCFService")]
    [System.SerializableAttribute()]
    public partial class PurchaseContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicineCompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedicinePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedicineQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PurchaseIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicineCompanyName {
            get {
                return this.MedicineCompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicineCompanyNameField, value) != true)) {
                    this.MedicineCompanyNameField = value;
                    this.RaisePropertyChanged("MedicineCompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicineName {
            get {
                return this.MedicineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicineNameField, value) != true)) {
                    this.MedicineNameField = value;
                    this.RaisePropertyChanged("MedicineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedicinePrice {
            get {
                return this.MedicinePriceField;
            }
            set {
                if ((this.MedicinePriceField.Equals(value) != true)) {
                    this.MedicinePriceField = value;
                    this.RaisePropertyChanged("MedicinePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedicineQuantity {
            get {
                return this.MedicineQuantityField;
            }
            set {
                if ((this.MedicineQuantityField.Equals(value) != true)) {
                    this.MedicineQuantityField = value;
                    this.RaisePropertyChanged("MedicineQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PurchaseId {
            get {
                return this.PurchaseIdField;
            }
            set {
                if ((this.PurchaseIdField.Equals(value) != true)) {
                    this.PurchaseIdField = value;
                    this.RaisePropertyChanged("PurchaseId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMedicine", ReplyAction="http://tempuri.org/IService1/AddMedicineResponse")]
        void AddMedicine(WebClient.ServiceReference2.MedicineContract medicineContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMedicine", ReplyAction="http://tempuri.org/IService1/AddMedicineResponse")]
        System.Threading.Tasks.Task AddMedicineAsync(WebClient.ServiceReference2.MedicineContract medicineContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMedicines", ReplyAction="http://tempuri.org/IService1/GetMedicinesResponse")]
        WebClient.ServiceReference2.MedicineContract[] GetMedicines();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMedicines", ReplyAction="http://tempuri.org/IService1/GetMedicinesResponse")]
        System.Threading.Tasks.Task<WebClient.ServiceReference2.MedicineContract[]> GetMedicinesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMedicine", ReplyAction="http://tempuri.org/IService1/GetMedicineResponse")]
        WebClient.ServiceReference2.MedicineContract GetMedicine(int MedicineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMedicine", ReplyAction="http://tempuri.org/IService1/GetMedicineResponse")]
        System.Threading.Tasks.Task<WebClient.ServiceReference2.MedicineContract> GetMedicineAsync(int MedicineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateMedicine", ReplyAction="http://tempuri.org/IService1/UpdateMedicineResponse")]
        void UpdateMedicine(WebClient.ServiceReference2.MedicineContract medicineContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateMedicine", ReplyAction="http://tempuri.org/IService1/UpdateMedicineResponse")]
        System.Threading.Tasks.Task UpdateMedicineAsync(WebClient.ServiceReference2.MedicineContract medicineContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteMedicine", ReplyAction="http://tempuri.org/IService1/DeleteMedicineResponse")]
        void DeleteMedicine(int MedicineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteMedicine", ReplyAction="http://tempuri.org/IService1/DeleteMedicineResponse")]
        System.Threading.Tasks.Task DeleteMedicineAsync(int MedicineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BuyMedicine", ReplyAction="http://tempuri.org/IService1/BuyMedicineResponse")]
        void BuyMedicine(WebClient.ServiceReference2.MedicineContract medicineContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BuyMedicine", ReplyAction="http://tempuri.org/IService1/BuyMedicineResponse")]
        System.Threading.Tasks.Task BuyMedicineAsync(WebClient.ServiceReference2.MedicineContract medicineContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHistory", ReplyAction="http://tempuri.org/IService1/GetHistoryResponse")]
        WebClient.ServiceReference2.PurchaseContract[] GetHistory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHistory", ReplyAction="http://tempuri.org/IService1/GetHistoryResponse")]
        System.Threading.Tasks.Task<WebClient.ServiceReference2.PurchaseContract[]> GetHistoryAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebClient.ServiceReference2.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebClient.ServiceReference2.IService1>, WebClient.ServiceReference2.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddMedicine(WebClient.ServiceReference2.MedicineContract medicineContract) {
            base.Channel.AddMedicine(medicineContract);
        }
        
        public System.Threading.Tasks.Task AddMedicineAsync(WebClient.ServiceReference2.MedicineContract medicineContract) {
            return base.Channel.AddMedicineAsync(medicineContract);
        }
        
        public WebClient.ServiceReference2.MedicineContract[] GetMedicines() {
            return base.Channel.GetMedicines();
        }
        
        public System.Threading.Tasks.Task<WebClient.ServiceReference2.MedicineContract[]> GetMedicinesAsync() {
            return base.Channel.GetMedicinesAsync();
        }
        
        public WebClient.ServiceReference2.MedicineContract GetMedicine(int MedicineId) {
            return base.Channel.GetMedicine(MedicineId);
        }
        
        public System.Threading.Tasks.Task<WebClient.ServiceReference2.MedicineContract> GetMedicineAsync(int MedicineId) {
            return base.Channel.GetMedicineAsync(MedicineId);
        }
        
        public void UpdateMedicine(WebClient.ServiceReference2.MedicineContract medicineContract) {
            base.Channel.UpdateMedicine(medicineContract);
        }
        
        public System.Threading.Tasks.Task UpdateMedicineAsync(WebClient.ServiceReference2.MedicineContract medicineContract) {
            return base.Channel.UpdateMedicineAsync(medicineContract);
        }
        
        public void DeleteMedicine(int MedicineId) {
            base.Channel.DeleteMedicine(MedicineId);
        }
        
        public System.Threading.Tasks.Task DeleteMedicineAsync(int MedicineId) {
            return base.Channel.DeleteMedicineAsync(MedicineId);
        }
        
        public void BuyMedicine(WebClient.ServiceReference2.MedicineContract medicineContract) {
            base.Channel.BuyMedicine(medicineContract);
        }
        
        public System.Threading.Tasks.Task BuyMedicineAsync(WebClient.ServiceReference2.MedicineContract medicineContract) {
            return base.Channel.BuyMedicineAsync(medicineContract);
        }
        
        public WebClient.ServiceReference2.PurchaseContract[] GetHistory() {
            return base.Channel.GetHistory();
        }
        
        public System.Threading.Tasks.Task<WebClient.ServiceReference2.PurchaseContract[]> GetHistoryAsync() {
            return base.Channel.GetHistoryAsync();
        }
    }
}
